// Generated by CoffeeScript 1.11.1
(function() {
  var ImageModule, ImgManager, ImgReplacer, Namespace, QName, SubContent, XML, XMLList, fs, jsxml;

  SubContent = require('docxtemplater').SubContent;

  ImgManager = require('./imgManager');

  ImgReplacer = require('./imgReplacer');

  fs = require('fs');

  jsxml = require("node-jsxml");

  Namespace = jsxml.Namespace;

  QName = jsxml.QName;

  XML = jsxml.XML;

  XMLList = jsxml.XMLList;

  ImageModule = (function() {
    function ImageModule(options) {
      this.options = options != null ? options : {};
      if (this.options.centered == null) {
        this.options.centered = false;
      }
      this.qrQueue = [];
      this.imageNumber = 1;
      if (this.options.presentation) {
        this.presentation = true;
      } else {
        this.presentation = false;
      }
    }

    ImageModule.prototype.handleEvent = function(event, eventData) {
      var gen;
      if (event === 'rendering-file') {
        this.renderingFileName = eventData;
        gen = this.manager.getInstance('gen');
        this.imgManager = new ImgManager(gen.zip, this.renderingFileName);
        this.imgManager.loadImageRels();
      }
      if (event === 'rendered') {
        if (this.qrQueue.length === 0) {
          return this.finished();
        }
      }
    };

    ImageModule.prototype.get = function(data) {
      var templaterState;
      if (data === 'loopType') {
        templaterState = this.manager.getInstance('templaterState');
        if (templaterState.textInsideTag[0] === '%') {
          return 'image';
        }
      }
      return null;
    };

    ImageModule.prototype.getNextImageName = function() {
      var name;
      name = "image_generated_" + this.imageNumber + ".png";
      this.imageNumber++;
      return name;
    };

    ImageModule.prototype.replaceBy = function(text, outsideElement) {
      var subContent, templaterState, xmlTemplater;
      xmlTemplater = this.manager.getInstance('xmlTemplater');
      templaterState = this.manager.getInstance('templaterState');
      subContent = new SubContent(xmlTemplater.content).getInnerTag(templaterState).getOuterXml(outsideElement);
      return xmlTemplater.replaceXml(subContent, text);
    };

    ImageModule.prototype.getPositionFromText = function() {
      var return_value, subContent, templaterState, xform, xml, xmlTemplater;
      xmlTemplater = this.manager.getInstance('xmlTemplater');
      templaterState = this.manager.getInstance('templaterState');
      subContent = new SubContent(xmlTemplater.content).getInnerTag(templaterState).getOuterXml('p:sp').text;
      return_value = {};
      xml = new XML(subContent);
      xform = xml.child('spPr').child('xfrm');
      return_value.txtX = xform.child('off').attribute('x').getValue();
      return_value.txtY = xform.child('off').attribute('y').getValue();
      return_value.txtW = xform.child('ext').attribute('cx').getValue();
      return_value.txtH = xform.child('ext').attribute('cy').getValue();
      return return_value;
    };

    ImageModule.prototype.convertPixelsToEmus = function(pixel) {
      return Math.round(pixel * 9525);
    };

    ImageModule.prototype.getSizeFromData = function(imgData) {
      return [150, 150];
    };

    ImageModule.prototype.getImageFromData = function(imgData) {
      return imgData;
    };

    ImageModule.prototype.replaceTag = function() {
      var e, imageRels, imgBuffer, imgData, newText, outsideElement, positionOfTextBox, rId, scopeManager, size, sizePixel, startEnd, tag, tagXml, templaterState;
      scopeManager = this.manager.getInstance('scopeManager');
      templaterState = this.manager.getInstance('templaterState');
      tag = templaterState.textInsideTag.substr(1);
      imgData = scopeManager.getValueFromScope(tag);
      tagXml = this.manager.getInstance('xmlTemplater').tagXml;
      startEnd = "<" + tagXml + "></" + tagXml + ">";
      if (imgData === 'undefined') {
        return this.replaceBy(startEnd, tagXml);
      }
      try {
        imgBuffer = this.getImageFromData(imgData);
      } catch (error) {
        e = error;
        return this.replaceBy(startEnd, tagXml);
      }
      imageRels = this.imgManager.loadImageRels();
      if (imageRels) {
        rId = imageRels.addImageRels(this.getNextImageName(), imgBuffer);
        sizePixel = this.getSizeFromData(imgBuffer);
        size = [this.convertPixelsToEmus(sizePixel[0]), this.convertPixelsToEmus(sizePixel[1])];
        if (this.options.centered === false) {
          outsideElement = tagXml;
          newText = this.getImageXml(rId, size);
        }
        if (this.options.centered === true) {
          outsideElement = tagXml.substr(0, 1) + ':p';
          newText = this.getImageXmlCentered(rId, size);
        }
        if (this.presentation) {
          positionOfTextBox = this.getPositionFromText();
          newText = this.getPresentationImageXml(rId, positionOfTextBox.txtX, positionOfTextBox.txtY, positionOfTextBox.txtW, positionOfTextBox.txtH);
          outsideElement = 'p:sp';
        }
        return this.replaceBy(newText, outsideElement);
      }
    };

    ImageModule.prototype.replaceQr = function() {
      var e, imR, xmlTemplater;
      xmlTemplater = this.manager.getInstance('xmlTemplater');
      imR = new ImgReplacer(xmlTemplater, this.imgManager);
      imR.getDataFromString = (function(_this) {
        return function(result, cb) {
          if (_this.getImageFromDataAsync != null) {
            return _this.getImageFromDataAsync(result, cb);
          } else {
            return cb(null, _this.getImageFromData(result));
          }
        };
      })(this);
      imR.pushQrQueue = (function(_this) {
        return function(num) {
          return _this.qrQueue.push(num);
        };
      })(this);
      imR.popQrQueue = (function(_this) {
        return function(num) {
          var found;
          found = _this.qrQueue.indexOf(num);
          if (found !== -1) {
            _this.qrQueue.splice(found, 1);
          } else {
            _this.on('error', new Error("qrqueue " + num + " is not in qrqueue"));
          }
          if (_this.qrQueue.length === 0) {
            return _this.finished();
          }
        };
      })(this);
      try {
        return imR.findImages().replaceImages();
      } catch (error) {
        e = error;
        return this.on('error', e);
      }
    };

    ImageModule.prototype.finished = function() {};

    ImageModule.prototype.on = function(event, data) {
      if (event === 'error') {
        throw data;
      }
    };

    ImageModule.prototype.handle = function(type, data) {
      if (type === 'replaceTag' && data === 'image') {
        this.replaceTag();
      }
      if (type === 'xmlRendered' && this.options.qrCode) {
        this.replaceQr();
      }
      return null;
    };

    ImageModule.prototype.getPresentationImageXml = function(rId, x, y, cx, cy) {
      return "<p:pic><p:nvPicPr><p:cNvPr id=\"6\" name=\"Picture 2\"/><p:cNvPicPr><a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/></p:cNvPicPr><p:nvPr/></p:nvPicPr>\n<p:blipFill><a:blip r:embed=\"rId" + rId + "\" cstate=\"print\">\n<a:extLst><a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\n<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/></a:ext></a:extLst></a:blip>\n<a:srcRect/><a:stretch><a:fillRect/></a:stretch></p:blipFill><p:spPr bwMode=\"auto\">\n<a:xfrm><a:off x=\"" + x + "\" y=\"" + y + "\"/><a:ext cx=\"" + cx + "\" cy=\"" + cy + "\"/></a:xfrm><a:prstGeom prst=\"rect\"><a:avLst/></a:prstGeom><a:noFill/><a:ln><a:noFill/></a:ln><a:effectLst/><a:extLst><a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\"><a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\"><a:solidFill><a:schemeClr val=\"accent1\"/></a:solidFill></a14:hiddenFill></a:ext><a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\"><a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\"><a:solidFill><a:schemeClr val=\"tx1\"/></a:solidFill><a:miter lim=\"800000\"/><a:headEnd/><a:tailEnd/></a14:hiddenLine></a:ext><a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\"><a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\"><a:effectLst><a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\"><a:schemeClr val=\"bg2\"/></a:outerShdw></a:effectLst></a14:hiddenEffects></a:ext></a:extLst></p:spPr></p:pic>";
    };

    ImageModule.prototype.getImageXml = function(rId, size) {
      return "<w:drawing>\n  <wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\n    <wp:extent cx=\"" + size[0] + "\" cy=\"" + size[1] + "\"/>\n    <wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\n    <wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\n    <wp:cNvGraphicFramePr>\n      <a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\n    </wp:cNvGraphicFramePr>\n    <a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\n      <a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\n        <pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\n          <pic:nvPicPr>\n            <pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\n            <pic:cNvPicPr>\n              <a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\n            </pic:cNvPicPr>\n          </pic:nvPicPr>\n          <pic:blipFill>\n            <a:blip r:embed=\"rId" + rId + "\">\n              <a:extLst>\n                <a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\n                  <a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\n                </a:ext>\n              </a:extLst>\n            </a:blip>\n            <a:srcRect/>\n            <a:stretch>\n              <a:fillRect/>\n            </a:stretch>\n          </pic:blipFill>\n          <pic:spPr bwMode=\"auto\">\n            <a:xfrm>\n              <a:off x=\"0\" y=\"0\"/>\n              <a:ext cx=\"" + size[0] + "\" cy=\"" + size[1] + "\"/>\n            </a:xfrm>\n            <a:prstGeom prst=\"rect\">\n              <a:avLst/>\n            </a:prstGeom>\n            <a:noFill/>\n            <a:ln>\n              <a:noFill/>\n            </a:ln>\n          </pic:spPr>\n        </pic:pic>\n      </a:graphicData>\n    </a:graphic>\n  </wp:inline>\n</w:drawing>";
    };

    ImageModule.prototype.getImageXmlCentered = function(rId, size) {
      return "<w:p>\n  <w:pPr>\n	<w:jc w:val=\"center\"/>\n  </w:pPr>\n  <w:r>\n	<w:rPr/>\n	<w:drawing>\n	  <wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\n		<wp:extent cx=\"" + size[0] + "\" cy=\"" + size[1] + "\"/>\n		<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\n		<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\n		  <a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\n			<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\n			  <pic:nvPicPr>\n				<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\n				<pic:cNvPicPr>\n				  <a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\n				</pic:cNvPicPr>\n			  </pic:nvPicPr>\n			  <pic:blipFill>\n				<a:blip r:embed=\"rId" + rId + "\"/>\n				<a:stretch>\n				  <a:fillRect/>\n				</a:stretch>\n			  </pic:blipFill>\n			  <pic:spPr bwMode=\"auto\">\n				<a:xfrm>\n				  <a:off x=\"0\" y=\"0\"/>\n				  <a:ext cx=\"" + size[0] + "\" cy=\"" + size[1] + "\"/>\n				</a:xfrm>\n				<a:prstGeom prst=\"rect\">\n				  <a:avLst/>\n				</a:prstGeom>\n				<a:noFill/>\n				<a:ln w=\"9525\">\n				  <a:noFill/>\n				  <a:miter lim=\"800000\"/>\n				  <a:headEnd/>\n				  <a:tailEnd/>\n				</a:ln>\n			  </pic:spPr>\n			</pic:pic>\n		  </a:graphicData>\n		</a:graphic>\n	  </wp:inline>\n	</w:drawing>\n  </w:r>\n</w:p>";
    };

    return ImageModule;

  })();

  module.exports = ImageModule;

}).call(this);
